<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qxc.blog.dao.BlogCommentsMapper">
  <resultMap id="BaseResultMap" type="com.qxc.blog.pojo.BlogComments">
    <id column="index" jdbcType="BIGINT" property="index" />
    <id column="articleid" jdbcType="VARCHAR" property="articleid" />
    <id column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="commentsid" jdbcType="INTEGER" property="commentsid" />
    <result column="hasdelete" jdbcType="INTEGER" property="hasdelete" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.qxc.blog.pojo.BlogComments">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    index, articleid, createtime, username, commentsid, hasdelete
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.qxc.blog.pojo.BlogCommentsExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blogcomments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.qxc.blog.pojo.BlogCommentsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blogcomments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.qxc.blog.pojo.BlogCommentsKey" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blogcomments
    where index = #{index,jdbcType=BIGINT}
      and articleid = #{articleid,jdbcType=VARCHAR}
      and createtime = #{createtime,jdbcType=TIMESTAMP}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.qxc.blog.pojo.BlogCommentsKey">
    delete from blogcomments
    where index = #{index,jdbcType=BIGINT}
      and articleid = #{articleid,jdbcType=VARCHAR}
      and createtime = #{createtime,jdbcType=TIMESTAMP}
  </delete>
  <delete id="deleteByExample" parameterType="com.qxc.blog.pojo.BlogCommentsExample">
    delete from blogcomments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qxc.blog.pojo.BlogComments">
    insert into blogcomments (index, articleid, createtime, 
      username, commentsid, hasdelete, 
      content)
    values (#{index,jdbcType=BIGINT}, #{articleid,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, 
      #{username,jdbcType=VARCHAR}, #{commentsid,jdbcType=INTEGER}, #{hasdelete,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.qxc.blog.pojo.BlogComments">
    insert into blogcomments
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="index != null">
        index,
      </if>
      <if test="articleid != null">
        articleid,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="commentsid != null">
        commentsid,
      </if>
      <if test="hasdelete != null">
        hasdelete,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="index != null">
        #{index,jdbcType=BIGINT},
      </if>
      <if test="articleid != null">
        #{articleid,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="commentsid != null">
        #{commentsid,jdbcType=INTEGER},
      </if>
      <if test="hasdelete != null">
        #{hasdelete,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qxc.blog.pojo.BlogCommentsExample" resultType="java.lang.Long">
    select count(*) from blogcomments
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update blogcomments
    <set>
      <if test="record.index != null">
        index = #{record.index,jdbcType=BIGINT},
      </if>
      <if test="record.articleid != null">
        articleid = #{record.articleid,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.commentsid != null">
        commentsid = #{record.commentsid,jdbcType=INTEGER},
      </if>
      <if test="record.hasdelete != null">
        hasdelete = #{record.hasdelete,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update blogcomments
    set index = #{record.index,jdbcType=BIGINT},
      articleid = #{record.articleid,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      username = #{record.username,jdbcType=VARCHAR},
      commentsid = #{record.commentsid,jdbcType=INTEGER},
      hasdelete = #{record.hasdelete,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update blogcomments
    set index = #{record.index,jdbcType=BIGINT},
      articleid = #{record.articleid,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      username = #{record.username,jdbcType=VARCHAR},
      commentsid = #{record.commentsid,jdbcType=INTEGER},
      hasdelete = #{record.hasdelete,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qxc.blog.pojo.BlogComments">
    update blogcomments
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="commentsid != null">
        commentsid = #{commentsid,jdbcType=INTEGER},
      </if>
      <if test="hasdelete != null">
        hasdelete = #{hasdelete,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where index = #{index,jdbcType=BIGINT}
      and articleid = #{articleid,jdbcType=VARCHAR}
      and createtime = #{createtime,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.qxc.blog.pojo.BlogComments">
    update blogcomments
    set username = #{username,jdbcType=VARCHAR},
      commentsid = #{commentsid,jdbcType=INTEGER},
      hasdelete = #{hasdelete,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where index = #{index,jdbcType=BIGINT}
      and articleid = #{articleid,jdbcType=VARCHAR}
      and createtime = #{createtime,jdbcType=TIMESTAMP}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qxc.blog.pojo.BlogComments">
    update blogcomments
    set username = #{username,jdbcType=VARCHAR},
      commentsid = #{commentsid,jdbcType=INTEGER},
      hasdelete = #{hasdelete,jdbcType=INTEGER}
    where index = #{index,jdbcType=BIGINT}
      and articleid = #{articleid,jdbcType=VARCHAR}
      and createtime = #{createtime,jdbcType=TIMESTAMP}
  </update>
</mapper>